<?xml version="1.0"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc strict="yes"?>
<?rfc symrefs="yes"?>
<?rfc linkmailto="no"?>
<?rfc comments="yes" ?>
<?rfc inline="yes" ?>
<rfc category="std" ipr="trust200902"
   docName='draft-ietf-lamps-eai-addresses-10'>
<front>
<title abbrev="I18N Mail Addresses in X.509 certificates">
 Internationalized Email Addresses in X.509 certificates
</title>
<author initials="A." surname="Melnikov" fullname="Alexey Melnikov" role="editor">
	<organization>Isode Ltd</organization>
	<address>
    <postal>
      <street>14 Castle Mews</street>
      <city>Hampton</city>
      <region>Middlesex</region>
      <code>TW12 2NP</code>
      <country>UK</country>
    </postal>
    <email>Alexey.Melnikov@isode.com</email>
	</address>
</author>
<author initials="W." surname="Chuang" fullname="Weihaw Chuang" role="editor">
    <organization>Google, Inc.</organization>
    <address>
        <postal>
            <street>1600 Amphitheater Parkway</street>
            <city>Mountain View</city> <region>CA</region>
            <code>94043</code>
            <country>US</country>
        </postal>
        <email>weihaw@google.com</email>
    </address>
</author>
<date year="2017" />
<area>Security</area>
<workgroup>LAMPS</workgroup>
<keyword>EAI</keyword>
<keyword>PKIX</keyword>
<keyword>email address</keyword>

<abstract>

<t>
This document defines a new name form for inclusion in the otherName
field of an X.509 Subject Alternative Name and Issuer Alternate Name
extension that allows a certificate subject to be associated with an
Internationalized Email Address.
</t>

</abstract>
</front>
<middle>

<section title="Introduction">

<t><xref target="RFC5280"/> defines rfc822Name subjectAltName choice for representing
<xref target="RFC5321"/> email addresses. This form is restricted to a subset of US-ASCII
characters and thus can't be used to represent Internationalized Email addresses
<xref target='RFC6531'/>.  To facilitate use of these
Internationalized Email addresses with X.509 certificates, this document
specifies a new name form in otherName so that subjectAltName and issuerAltName
can carry them.  In addition this document calls for all email address domain in X.509 certificates
to conform to IDNA2008 <xref target='RFC5890'/>.
</t>

</section>

<section title="Conventions Used in This Document">
<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in
this document are to be interpreted as described in
<xref target="RFC2119"/>.</t>

<t>The formal syntax use the <xref target="RFC5234">Augmented
Backus-Naur Form (ABNF)</xref> notation.</t>
</section>

<section title="Name Definitions" anchor="sec_name_def">

<t> The GeneralName structure is defined in <xref target="RFC5280"/>, and supports many different
names forms including otherName for extensibility.  This section specifies the SmtpUTF8Name name
form of otherName, so that Internationalized Email addresses can appear in the subjectAltName of a
certificate, the issuerAltName of a certificate, or anywhere else that GeneralName is used. </t>

<t>id-on-SmtpUTF8Name OBJECT IDENTIFIER ::= { id-on 9 }</t>

<t>SmtpUTF8Name ::= UTF8String (SIZE (1..MAX))</t>

<t> When the subjectAltName (or issuerAltName) extension contains an Internationalized Email
address, the address MUST be stored in the SmtpUTF8Name name form of otherName.  The format of
SmtpUTF8Name is defined as the ABNF rule SmtpUTF8Mailbox. SmtpUTF8Mailbox is a modified version of
the Internationalized Mailbox which was defined in Section 3.3 of <xref target='RFC6531'/> which was
itself derived from SMTP Mailbox from Section 4.1.2 of <xref target='RFC5321'/>. <xref
target='RFC6531'/> defines the following ABNF rules for Mailbox whose parts are modified for
internationalization: &lt;Local-part&gt;, &lt;Dot-string&gt;, &lt;Quoted-string&gt;,
&lt;QcontentSMTP&gt;, &lt;Domain&gt;, and &lt;Atom&gt;.  In particular, &lt;Local-part&gt; was
updated to also support UTF8-non-ascii.  UTF8-non-ascii was described by Section 3.1 of <xref
target='RFC6532'/>.  Also, sub-domain was extended to support U-label, as defined in <xref
target='RFC5890'/>.
</t>

<t> This document further refines Internationalized <xref target='RFC6531'/> Mailbox ABNF rules and
calls this SmtpUTF8Mailbox.  In SmtpUTF8Mailbox, sub-domain that encode non-ASCII characters SHALL
use U-label Unicode native character labels and MUST NOT use A-label <xref target='RFC5890'/>.  This
restriction prevents having to determine which label encoding A- or U-label is present in the
Domain.  As per Section 2.3.2.1 of <xref target='RFC5890'/>, U-label use UTF-8 <xref
target='RFC3629'/> with Normalization Form C and other properties specified there.  In
SmtpUTF8Mailbox, sub-domain that encode ASCII character labels SHALL use NR-LDH restrictions as
specified by section 2.3.1 of <xref target='RFC5890'/> and SHALL be restricted to lower case
letters. One suggested approach to apply these sub-domains restriction is to restrict sub-domain so
that labels not start with two letters followed by two hyphen-minus characters. Consistent with the
treatment of rfc822Name in <xref target='RFC5280'/>, SmtpUTF8Name is an envelope &lt;Mailbox&gt; and
has no phrase (such as a common name) before it, has no comment (text surrounded in parentheses)
after it, and is not surrounded by "&lt;" and "&gt;". </t>

<t> Due to operational reasons described shortly and name constraint compatibility reasons described
in its section, SmtpUTF8Name subjectAltName MUST only be used when the local part of the email address
contains UTF-8.  When the local-part is ASCII, rfc822Name subjectAltName MUST be used instead of
SmtpUTF8Name.  The use of rfc822Name rather than SmtpUTF8Name is currently more likely to be
supported.  Also use of SmtpUTF8Name incurs higher byte representation overhead due to encoding with
otherName and the additional OID needed.  This may be offset if domain requires non-ASCII characters
as SmtpUTF8Name supports U-label whereas rfc822Name supports A-label. </t>

<t> SmtpUTF8Name is encoded as UTF8String.  The UTF8String encoding MUST NOT contain a Byte-Order-
Mark (BOM) <xref target='RFC3629'/> to aid consistency across implementations particularly for
comparison. </t> </section>

<section title="IDNA2008" anchor="sec_idna"> <t> To facilitate comparison between email addresses,
all email address domain in X.509 certificates MUST conform to IDNA2008 <xref target='RFC5890'/>
(and excludes any "mappings" mentioned in that document).  Otherwise non-conforming email address
domains introduces the possibility of conversion errors between alternate forms.  This applies to
SmtpUTF8Mailbox and rfc822Name in subjectAltName, issuerAltName and anywhere else that GeneralName
is used. </t> </section>

<section title='Matching of Internationalized Email Addresses in X.509 certificates'
anchor="sec_match">

<t>In equivalence comparison with SmtpUTF8Name, there may be some setup work to enable the
comparison i.e. processing of the SmtpUTF8Name content or the email address that is being compared
against. The process for setup for comparing with SmtpUTF8Name is split into domain steps and local-
part steps.  The comparison form for local-part always is UTF-8. The comparison form for domain
depends on context. While some contexts such as certificate path validation in <xref
target='RFC5280'/> specify transforming domain to A-label, this document RECOMMENDS transforming to
UTF-8 U-label instead.  This reduces the likelihood of errors by reducing conversions as more
implementations natively support U-label domains. </t>

<t> Comparison of two SmtpUTF8Name is straightforward with no setup work needed.  They are
considered equivalent if there is an exact octet-for-octet match.  Comparison with other email
address forms such as Internationalized email address or rfc822Name requires additional setup steps.
Domain setup is particularly important for forms that may contain A- or U-label such as
International email address, or A-label only forms such as rfc822Name.  This document specifies the
process to transform the domain to U-label.  (To convert the domain to A-label, follow the process
specified in section 7.5 and 7.2 in <xref target='RFC5280'/>) The first step is to detect A-label by
using section 5.1 of <xref target='RFC5891'/>. Next if necessary, transform the A-label to U-label
Unicode as specified in section 5.2 of <xref target='RFC5891'/>.  Finally if necessary convert the
Unicode to UTF-8 as specified in section 3 of <xref target='RFC3629'/>.  For ASCII NR-LDH labels,
upper case letters are converted to lower case letters.  In setup for SmtpUTF8Mailbox, the email
address local-part MUST conform to the requirements of <xref target='RFC6530'/> and <xref
target='RFC6531'/>, including being a string in UTF-8 form.  In particular, the local-part
MUST NOT be transformed in any way, such as by doing case folding or normalization of any kind.  The
&lt;Local-part&gt; part of an Internationalized email address is already in UTF-8.  For rfc822Name
the local-part, which is IA5String (ASCII), trivially maps to UTF-8 without change.  Once setup is
complete, they are again compared octet-for-octet. </t>

<t> To summarize non-normatively, the comparison steps including setup are:
  <list style="numbers">
    <t>If the domain contains A-labels, transform them to U-label.</t>
    <t>If the domain contains ASCII NR-LDH labels, lowercase them.</t>
    <t>Ensure local-part is UTF-8.</t>
    <t>Compare strings octet-for-octet for equivalence.</t>
  </list>
</t>

<t> This specification expressly does not define any wildcards characters and SmtpUTF8Name
comparison implementations MUST NOT interpret any character as wildcards.  Instead, to specify
multiple email addresses through SmtpUTF8Name, the certificate SHOULD use multiple subjectAltNames
or issuerAltNames to explicitly carry those email addresses. </t>

</section>

<section title='Name constraints in path validation' anchor="sec_constraint">

<t> This section updates <xref target='RFC5280'/> name constraints defined in section 4.2.1.10 to
work with SmtpUTF8Name subjectAltName.  The following specifies that a SmtpUTF8Name aware CA use a
compatible name constraint representation.  Similarly a SmtpUTF8Name aware path validators MUST be
able to apply name constraint comparison to the subject distinguished name and both forms of subject
alternative name rfc822Name and SmtpUTF8Name.  </t>

<t> The SmtpUTF8Name aware email address name constraint form is specified to be rfc822Name
motivated by compatibility considerations with legacy systems that already understand that form.
This specification modifies <xref target='RFC5280'/> name constraint to only require with MAY that
it represents all addresses at a host or all mailboxes in a domain, and require with MAY NOT that it
represent a particular mailbox.  For context, <xref target='RFC5280'/> Section 4.2.1.10 specifies
with MAY that name constraint represent a particular mailbox, all addresses at a host, or all
mailboxes in a domain by specifying the complete email address, a host name, or a domain.  The
change is due to rfc822Name name constraints inability to represent a specific mailbox with a UTF-8
email local part email address.  CA certificate issuers should be aware of this lessened support.
</t>

<t> Constraint comparison with SmtpUTF8Name subjectAltName starts with the setup steps defined by
<xref target="sec_match"/>.  The setup applies to the inputs of the comparison which is one of a
subject distinguished name or a rfc822Name or SmtpUTF8Name subjectAltName, and one of a rfc822Name
name constraint.  Non-normatively the setup will convert any domain A-label to U-label in the
rfc822Name name constraint, and to lower case any doman NR-LDH label in both the name constraint and
the subject.  After setup, this follows the comparison steps defined in 4.2.1.10 of <xref
target='RFC5280'/> with some modifications as follows.  The comparison process starts by determining
the name constraint representation i.e. email host name or domain part, then comparing the name
constraint against the corresponding part in the email address using a byte for byte comparison.
This document suggests that name constraint comparison with subject distinguished name or rfc822Name
subjectAltName also follow these setup and comparisons steps as well. </t>

<t> The name constraint requirement with SmtpUTF8Name subject alternative name is illustrated in the
non-normative diagram <xref target="example_permitted_matched_constraint" />.   The first example
(1) illustrates a permitted rfc822Name ASCII only hostname name constraint, and the corresponding
valid rfc822Name subjectAltName and SmtpUTF8Name subjectAltName email addresses.  The second
example (2) illustrates a permitted rfc822Name hostname name constraint with A-label, and the
corresponding valid rfc822Name subjectAltName and SmtpUTF8Name subjectAltName email addresses.


<!-- u+8001u+5E2B is 老師 teacher; u+4E0Du+5C0D is 不對 wrong;  u+5B66u+751F 学生 student; -->
<!-- u+533Bu+751F 医生 doctor; U+5C0F U+5B66 (xn\-\-48s3o) 小学 is elemenary school -->
<!-- U+5927 U+5B66 (xn\-\-pss25c) is 大学 university; U+4E2D U+5B66 (xn\-\-fiq353a) is 中学 high school-->

<figure anchor="example_permitted_matched_constraint">
<artwork>
  +-------------------------------------------------------------------+
  |  Root CA Cert                                                     |
  +-------------------------------------------------------------------+
                                    |
                                    v
  +-------------------------------------------------------------------+
  |  Intermediate CA Cert                                             |
  |      Permitted                                                    |
  |        rfc822Name: elementary.school.example.com (1)              |
  |                                                                   |
  |        rfc822Name: xn--pss25c.example.com (2)                     |
  |                                                                   |
  +-------------------------------------------------------------------+
                                    |
                                    v
  +-------------------------------------------------------------------+
  |  Entity Cert (w/explicitly permitted subjects)                    |
  |    SubjectAltName Extension                                       |
  |      rfc822Name: student@elemenary.school.example.com (1)         |
  |      SmtpUTF8Name: u+5B66u+751F@elementary.school.example.com (1) |
  |                                                                   |
  |      rfc822Name: student@xn--pss25c.example.com (2)               |
  |      SmtpUTF8Name: u+533Bu+751F@u+5927u+5B66.example.com (2)      |
  |                                                                   |
  +-------------------------------------------------------------------+
</artwork>
<postamble>Name constraints with SmtpUTF8Name and rfc822Name</postamble>
</figure>
</t>


</section>


<section title="Security Considerations" anchor="seccons">

<t> Use for SmtpUTF8Name for certificate subjectAltName (and issuerAltName) will incur many of the
same security considerations of Section 8 in <xref target='RFC5280'/> but is further complicated by
permitting non-ASCII characters in the email address local-part. This complication, as mentioned in
Section 4.4 of <xref target='RFC5890'/> and in Section 4 of <xref target='RFC6532'/>, is that use of
Unicode introduces the risk of visually similar and identical characters which can be exploited to
deceive the recipient. The former document references some means to mitigate against these attacks.
</t>

</section>

<section title="IANA Considerations" anchor="sec_iana">

<t> in Section <xref target='sec_name_def'/> and the ASN.1 module identifier defined in Section
<xref target='appndix_asn1'/>. IANA is kindly requested to make the following assignments for:
  <list style="symbol">
  <t>The LAMPS-EaiAddresses-2016 ASN.1 module in the "SMI Security for PKIX Module Identifier"
     registry (1.3.6.1.5.5.7.0).</t>
  <t>The SmtpUTF8Name otherName in the "PKIX Other Name Forms" registry (1.3.6.1.5.5.7.8).</t>
</list>
</t>

</section>

</middle>
<back>
<references title="Normative References">
<?rfc include="reference.RFC.2119"?> <!-- Keywords -->
<?rfc include="reference.RFC.3629"?> <!-- UTF-8 -->
<?rfc include="reference.RFC.5234"?> <!-- ABNF -->
<?rfc include="reference.RFC.5280"?> <!-- X.509 Certificates -->
<?rfc include="reference.RFC.5321"?> <!-- Simple Mail Transfer Protocol -->
<?rfc include="reference.RFC.5890"?> <!-- Internationalized Domain Names for Applications (IDNA):
                                          Definitions and Document Framework -->
<?rfc include="reference.RFC.5891"?> <!-- Internationalized Domain Names in Applications (IDNA): Protocol -->
<?rfc include="reference.RFC.6530"?> <!-- Overview and Framework for Internationalized Email -->
<?rfc include="reference.RFC.6531"?> <!-- SMTP Extension for Internationalized Email -->
<?rfc include="reference.RFC.6532"?> <!-- Internationalized Email Headers-->

</references>
<references title="Informative References">

<?rfc include="reference.RFC.5912"?> <!-- New ASN.1 for PKIX -->
</references>

<section title="ASN.1 Module" anchor="appndix_asn1">

<t>The following ASN.1 module normatively specifies the SmtpUTF8Name structure.
This specification uses the ASN.1 definitions from
<xref target='RFC5912'/> with the 2002 ASN.1 notation used in that document.
<xref target='RFC5912'/> updates normative documents using older ASN.1 notation.</t>

<figure anchor="asn1_module">
<artwork>
  LAMPS-EaiAddresses-2016
    { iso(1) identified-organization(3) dod(6)
      internet(1) security(5) mechanisms(5) pkix(7) id-mod(0)
      id-mod-lamps-eai-addresses-2016(TBD) }

  DEFINITIONS IMPLICIT TAGS ::=
  BEGIN

  IMPORTS
    OTHER-NAME
    FROM PKIX1Implicit-2009
      { iso(1) identified-organization(3) dod(6) internet(1) security(5)
      mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-implicit-02(59) }

    id-pkix
    FROM PKIX1Explicit-2009
      { iso(1) identified-organization(3) dod(6) internet(1) security(5)
      mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-explicit-02(51) } &#59;

  --
  -- otherName carries additional name types for subjectAltName,
  -- issuerAltName, and other uses of GeneralNames.
  --

    id-on OBJECT IDENTIFIER ::= { id-pkix 8 }

    SmtpUtf8OtherNames OTHER-NAME ::= { on-SmtpUTF8Name, ... }

    on-SmtpUTF8Name OTHER-NAME ::= {
        SmtpUTF8Name IDENTIFIED BY id-on-SmtpUTF8Name
    }

    id-on-SmtpUTF8Name OBJECT IDENTIFIER ::= { id-on 9 }

    SmtpUTF8Name ::= UTF8String (SIZE (1..MAX))

  END
</artwork>
</figure>

</section>

<section title="Example of SmtpUTF8Name" anchor="appndix_example">
<t>This non-normative example demonstrates using SmtpUTF8Name as an otherName in
GeneralName to encode the email address "u+8001u+5E2B@example.com".</t>

<figure anchor="asn1_example">
<artwork>
   The hexadecimal DER encoding of the email address is:
   A022060A 2B060105 05070012 0809A014 0C12E880 81E5B8AB 40657861
   6D706C65 2E636F6D

   The text decoding is:
     0  34: [0] {
     2  10:   OBJECT IDENTIFIER '1 3 6 1 5 5 7 0 18 8 9'
    14  20:   [0] {
    16  18:     UTF8String '..@example.com'
          :     }
          :   }
</artwork>
</figure>
<t>The example was encoded on the OSS Nokalva ASN.1 Playground and the above text decoding
is an output of Peter Gutmann's "dumpasn1" program.</t>
</section>

<section title="Acknowledgements">

<t>Thank you to Magnus Nystrom for motivating this document.  Thanks to Russ Housley, Nicolas
Lidzborski, Laetitia Baudoin, Ryan Sleevi, Sean Leonard, Sean Turner, John Levine, and Patrik
Falstrom for their feedback. Also special thanks to John Klensin for his valuable input on
internationalization, Unicode and ABNF formatting, to Jim Schaad for his help with the ASN.1 example
and his helpful feedback, and to Viktor Dukhovni for his help with name constraints.</t>

</section>
</back>
</rfc>
